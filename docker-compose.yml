#Configure docker-compose file with postgres
version: '3.1'
services:

  db-sync:
    image: postgres
    container_name: db-sync
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: tcc
    ports:
      - "5433:5432"
    volumes:
      - ./data-sync:/var/lib/postgresql/data
    networks:
        - mynetwork

  db-async:
    image: postgres
    container_name: db-async
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: tcc
    ports:
      - "5432:5432"
    volumes:
      - ./data-async:/var/lib/postgresql/data
    networks:
        - mynetwork

  sync-app:
    build: ./sync-app
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    ports:
      - "8080:8080"
      - "8000:8000"
    depends_on:
      - db-sync
      - wiremock
      - localstack
      - stats
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: '4.00'
          memory: 2048M

  async-app:
    build: ./async-app
    ports:
      - "8080:8080"
    depends_on:
      - db-async
      - localstack
      - wiremock
      - stats
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: '4.00'
          memory: 2048M

  wiremock:
    image: "wiremock/wiremock:latest"
    container_name: wiremock
    volumes:
      - ./mappings:/home/wiremock/mappings
    entrypoint: [ "/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose" ]
    ports:
      - "8443:8080"
    networks:
      - mynetwork

  localstack:
    image: localstack/localstack
    container_name: localstack
    hostname: localstack
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=cloudformation,s3,sqs,sns,ses
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - HOSTNAME_EXTERNAL=localstack
      - HOST_TMP_FOLDER=/tmp/localstack
      - SQS_ENDPOINT_STRATEGY=dynamic
    volumes:
      - "./.localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - mynetwork

  stats:
    image: virtualzone/docker-container-stats
    container_name: 'stats'
    ports:
      - '8090:8080'
    environment:
      STATS_UPDATE_INTERVAL: 2
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/home/docker/storage/stats/db:/opt/docker-stats/db'

networks:
  mynetwork:
    driver: bridge